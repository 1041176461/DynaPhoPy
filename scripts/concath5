#!/usr/bin/env python

import h5py
import sys
import numpy as np
import argparse

parser = argparse.ArgumentParser(description='concath5')
parser.add_argument('input', metavar='input_files', type=str, nargs='+',
                   help='files to be joined')
parser.add_argument('output', metavar='output_file', type=str, nargs=1,
                   help='joined file')

parser.add_argument('-f', metavar='N', type=int, nargs=1, default=[20000],
                   help='first steps to be skipped')

args = parser.parse_args()

#print(args.n)
#print(args.input)
#print(args.output)

def read_file_hdf5(file_name):

    hdf5_file = h5py.File(file_name, "r")
    velocity = hdf5_file['velocity'][:]
    time = hdf5_file['time'][:]
    super_cell = hdf5_file['super_cell'][:]
    hdf5_file.close()

    return velocity, time, super_cell

def save_data_hdf5(file_name, velocity, time, super_cell):
    hdf5_file = h5py.File(file_name, "w")

    hdf5_file.create_dataset('velocity', data=velocity)
    hdf5_file.create_dataset('time', data=time)
    hdf5_file.create_dataset('super_cell', data=super_cell)

    print 'saved', velocity.shape[0], 'steps'
    hdf5_file.close()


if len(sys.argv) == 1:
    print('Usage: concath5 file.h5 file2.h5 ...  concatenated.h5')
    exit()


first = args.f[0]
print("skipping first {0} steps".format(first))
velocity, time, super_cell = read_file_hdf5(args.input[0])
velocity = velocity[first:]
print(args.input[0])

for arg in args.input[1:]:
    print(arg)
    new_velocity = read_file_hdf5(arg)[0]
    velocity = np.concatenate((velocity, new_velocity[first:]), axis=0)
print "Final: ", args.output[0]

save_data_hdf5(args.output[0], velocity, time, super_cell)

